/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas2;

import Codigos.Conexao;
import Codigos.ListadeChamada;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Renan
 */
public class TelaListaDeChamada extends javax.swing.JFrame {
    private int func;
    private String log;
    private String registroLog;
    /**
     * Creates new form ListaDeChamada
     */
    public TelaListaDeChamada() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTListaCha = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jBSalvar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLSerie = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLProfessor = new javax.swing.JLabel();
        jLDisc = new javax.swing.JLabel();
        jLData = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jBCancelar = new javax.swing.JButton();
        jLAula = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("jLabel1");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("jLabel1");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Lista De Chamada");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(700, 700));
        setPreferredSize(new java.awt.Dimension(700, 700));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTListaCha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTListaCha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "RA", "Nome", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTListaCha);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, -1, 310));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Série:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 72, 31));

        jBSalvar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBSalvar.setText("Salvar");
        jBSalvar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(jBSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 530, 130, 60));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Professor:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 92, 31));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Disciplina:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, 31));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Data:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, 72, 31));

        jLSerie.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(jLSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 72, 31));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Aula:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 72, 31));

        jLProfessor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(jLProfessor, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 72, 31));

        jLDisc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(jLDisc, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 72, 31));

        jLData.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(jLData, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 72, 31));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/background2 (1).png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, -1));

        jBCancelar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jBCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 530, 130, 60));

        jLAula.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(jLAula, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 80, 72, 31));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    ListadeChamada l = new ListadeChamada();
    private final String[] NomesColunas = {"RA", "Nome", "Situação"};
    private int tamanhoTabela;
    private int tipo;
    private int cancelar = 0;
    private int listaAtual = 0;
    ArrayList<String> lista = new ArrayList<>();
    private String updateTabela = "";
    private String erro = "";
    private int teve_erro = 0;
    int Prof;
    private String Serie;
    private String Disciplina;
    private String Aula;
    private String Data;
    
    public void setDados(int prof, String serie, String disc, String Aula, String data){
        this.Prof = prof;
        this.Serie = serie;
        this.Disciplina = disc;
        this.Aula = Aula;
        this.Data = data;
        
        String divisaoData[] = Data.split("-");
        String dataFormatada = divisaoData[2]+"/"+divisaoData[1]+"/"+divisaoData[0];
        
        jLData.setText(Aula);
        jLDisc.setText(Disciplina);
        jLProfessor.setText(String.valueOf(Prof));
        jLSerie.setText(Serie);
        jLData.setText(dataFormatada);
    }
    
    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        // TODO add your handling code here:
        Conexao c = new Conexao();
        cancelar = 1;
        tamanhoTabela = lista.size();
        if(jTListaCha.isEditing()){
        jTListaCha.getCellEditor().stopCellEditing();}
        
        try {
            c.conectar();
            
            if(!c.equals(null)){
                switch(tipo){
                    case 1:
                        for(int cont = 0; cont <tamanhoTabela; cont++){
                            l.setRA(Integer.parseInt((String) jTListaCha.getValueAt(cont, 0)));
                            l.setSituacao((String) jTListaCha.getValueAt(cont, 2));
                            
                            if(l.getSituacao() == null){
                                JOptionPane.showMessageDialog(this, "Nenhuma situação definida na linha "+String.valueOf(cont+1));
                                jTListaCha.setValueAt("Erro", cont, 2);
                                teve_erro = 1;
                            }else{
                                
                                if(l.getSituacao().equals("Presente") || l.getSituacao().equals("Falta")){
                              updateTabela = "update pcc_tb_listachamada set Lista_ST_SituacaoAluno ='"+l.getSituacao()+"' "
                                    + "where Lista_INT_Codigo = "+listaAtual+" and Aluno_INT_Codigo = "+l.getRA()+";";  
                              
                            
                                if(c.runSql(updateTabela)){
                                    if(cont == tamanhoTabela-1 && teve_erro == 0){
                                    JOptionPane.showMessageDialog(this, "Dados Alterados");
                                    log = "Dados da lista de chamada "+listaAtual+" alterados;";
                                    registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                                    c.runSql(registroLog);
                                    }
                                }else{
                                    erro = "Erro de conexão";
                                    JOptionPane.showMessageDialog(this, erro);
                                }   
                           
                              
                              
                            }else{
                                erro = "Caracteres Invalidos na linha "+String.valueOf(cont+1)+". Digite apenas 'Presente' ou 'Falta' no campo de Situação do Aluno";
                                JOptionPane.showMessageDialog(this, erro);
                                teve_erro = 1;
                            }
                                
                            }
                         }
                        
                        if(teve_erro == 1){
                            JOptionPane.showMessageDialog(this, "Ocorreram erros. Revise a lista novamente");
                            teve_erro = 0;
                            erro = "";
                        }else{
                            this.dispose();
                        } 

                        break;
                        
                    case 2:
                        
                        String hor = "select Hor_INT_Codigo from pcc_tb_horario where Hor_INT_Aula = "+Aula+" and"
                                + "  Pro_INT_Codigo = "+Prof+" and  "
                                + "Serie_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie where Serie_ST_Descricao = '"+Serie+"') "
                                + "and  Disc_INT_Codigo = (select Disc_INT_Codigo from pcc_tb_disciplina where Disc_ST_Descricao = '"+Disciplina+"') "
                                + "and Hor_ST_DiaDaSemana = (select func_nomeDia('"+Data+"'))";
                        int max = c.max_lista("select max(Lista_INT_Codigo) from pcc_tb_situacaolista");
                        int horario = c.cod_hor(hor);
                        max+=1;
                        if(c.runSql("insert into pcc_tb_situacaolista values ("+max+",'Fechada',"+jLProfessor.getText()+");")){
                            
                            for(int cont = 0; cont <tamanhoTabela; cont++){
                            l.setRA(Integer.parseInt((String) jTListaCha.getValueAt(cont, 0)));                          
                            l.setSituacao((String)jTListaCha.getValueAt(cont, 2));
                            
                            if(l.getSituacao() == null){
                                JOptionPane.showMessageDialog(this, "Nenhuma situação definida na linha "+String.valueOf(cont+1));
                                jTListaCha.setValueAt("Erro", cont, 2);
                                String criarLista = "insert into pcc_tb_listachamada values ("+max+",'Erro','"+Data+"',"+l.getRA()+","+horario+");";
                                teve_erro = 1;
                                if(c.runSql(criarLista)){
                                    if(cont == tamanhoTabela-1){
                                    JOptionPane.showMessageDialog(this, "Lista criada, porém com erros. Revise os dados digitados");
                                    log = "Criação de nova lista de chamada com erros. Código da lista: "+max+";";
                                    registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                                    c.runSql(registroLog);                                    
                                    }
                                }else{
                                    erro = "Erro de conexão";
                                    JOptionPane.showMessageDialog(this, erro);
                                }
                            }else{
                                
                                if(l.getSituacao().equals("Presente") || l.getSituacao().equals("Falta")){
                              String criarLista = "insert into pcc_tb_listachamada values ("+max+",'"+l.getSituacao()+"','"+Data+"',"+l.getRA()+","+horario+");";  
                                                          
                                if(c.runSql(criarLista)){
                                    if(cont == tamanhoTabela-1 && teve_erro == 0){
                                    JOptionPane.showMessageDialog(this, "Lista criada com sucesso");
                                    log = "Criação de nova lista de chamada. Código da lista: "+max+";";
                                    registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                                    c.runSql(registroLog);
                                    }
                                }else{
                                    erro = "Erro de conexão";
                                    JOptionPane.showMessageDialog(this, erro);
                                }   
                           
                              
                              
                            }else{
                                erro = "Caracteres Inválidos na linha "+String.valueOf(cont+1)+". Digite apenas 'Presente' ou 'Falta' no campo de Situação do Aluno";
                                JOptionPane.showMessageDialog(this, erro);
                                teve_erro = 1;
                                String criarLista = "insert into pcc_tb_listachamada values ("+max+",'"+l.getSituacao()+"','"+Data+"',"+l.getRA()+","+horario+");";  
                                                          
                                if(c.runSql(criarLista)){
                                    if(cont == tamanhoTabela-1 && erro.equals("")){
                                    JOptionPane.showMessageDialog(this, "Lista criada, porém com erros. Revise os dados digitados");
                                    log = "Criação de nova lista de chamada com erros. Código da lista: "+max+";";
                                    registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                                    c.runSql(registroLog);
                                    tipo = 1;
                                    }
                                }else{
                                    erro = "Erro de conexão";
                                    JOptionPane.showMessageDialog(this, erro);
                                } 
                            }
                                
                            }
                         }
                        
                        if(teve_erro == 1){
                            JOptionPane.showMessageDialog(this, "Ocorreram erros. Revise a lista novamente");
                            teve_erro = 0;
                            erro = "";
                            tipo = 1;
                            listaAtual=max;
                        }
                        else{
                            this.dispose();
                        }
                            
                        }else{
                            JOptionPane.showMessageDialog(this, "Ocorreu um erro. Tente Novamente");
                        }
                         
                        
                        break;
                        
                    default:
                        JOptionPane.showMessageDialog(this, "Ocorreu um erro. Tente Novamente");
                        break;
                }  
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaListaDeChamada.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaListaDeChamada.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        if(cancelar == 0){
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "Operação já foi iniciada. Não é possível cancelar");
        }
    }//GEN-LAST:event_jBCancelarActionPerformed
   
    public void setLista(ArrayList<String> lista){
        this.lista = lista;
        montaTabela();
    }
    
    public void montaTabela(){
        
        Object[][] data = new Object[lista.size()][3];
        
        for(int i = 0; i<lista.size(); i++){
            String divisor[] = lista.get(i).split(";");
            if(divisor.length == 2){
               data[i][0] = divisor[0];
               data[i][1] = divisor[1];
               tipo = 2;
            }else{
                data[i][0] = divisor[0];
                data[i][1] = divisor[1];
                data[i][2] = divisor[2];
                listaAtual = Integer.parseInt(divisor[3]);
                tipo = 1;
            }
        }
      
        jTListaCha.setModel(new DefaultTableModel(data, NomesColunas){
            boolean[] canEdit = new boolean []{  
            false, false, true
        };
        @Override  
        public boolean isCellEditable(int rowIndex, int columnIndex) {  
            return canEdit [columnIndex];  
        }
        });
        TableColumn situacao = jTListaCha.getColumnModel().getColumn(2);
        JComboBox comboBox = new JComboBox();
        comboBox.addItem("Presente");
        comboBox.addItem("Falta");
        situacao.setCellEditor(new DefaultCellEditor(comboBox));
        jTListaCha.setPreferredScrollableViewportSize(new Dimension(450,450));
        jTListaCha.setFillsViewportHeight(true);
        jTListaCha.setDefaultRenderer(Object.class, new CellRenderer());
    }
    
public class CellRenderer extends DefaultTableCellRenderer {
	public CellRenderer() {
		super();
	}
	public Component getTableCellRendererComponent(JTable table, Object value,
			boolean isSelected, boolean hasFocus, int row, int column) {
		this.setHorizontalAlignment(CENTER);
		return super.getTableCellRendererComponent(table, value, isSelected,
				hasFocus, row, column);
	}
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JLabel jLAula;
    private javax.swing.JLabel jLData;
    private javax.swing.JLabel jLDisc;
    private javax.swing.JLabel jLProfessor;
    private javax.swing.JLabel jLSerie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTListaCha;
    // End of variables declaration//GEN-END:variables

    public int getFunc() {
        return func;
    }

    public void setFunc(int func) {
        this.func = func;
    }
}
