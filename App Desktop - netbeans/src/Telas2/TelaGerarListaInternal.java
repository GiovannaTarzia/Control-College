/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas2;

import TelasAntigas.TelaGerarLista;
import Codigos.Conexao;
import Codigos.Horario;
import Codigos.ListadeChamada;
import Codigos.Pessoa;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Renan
 */
public class TelaGerarListaInternal extends javax.swing.JInternalFrame {
    private int func;
    /**
     * Creates new form TelaGerarListaInternal
     */
    public TelaGerarListaInternal() {
        initComponents();
        
        jBGerar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent ke) {
                if(ke.getKeyCode() == KeyEvent.VK_ENTER){
                    jBGerar.doClick();
                }
            }
            
            
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBGerar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCAula = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jCDiscip = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTProfessor = new javax.swing.JTextField();
        jFData = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jCSerie = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1367, 700));

        jBGerar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBGerar.setText("Gerar Lista");
        jBGerar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGerarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Disciplina:");

        jCAula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "1", "2", "3", "4", "5" }));
        jCAula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCAula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCAulaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Data:");

        jCDiscip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Matemática", "Português", "Biologia", "Química", "História", "Ciências", "Sociologia", "Filosofia", "Artes", "Educação Física" }));
        jCDiscip.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCDiscip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCDiscipActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Aula:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Professor:");

        jTProfessor.setEditable(false);
        jTProfessor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTProfessor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jFData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            jFData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Série:");

        jCSerie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "1º Ano", "2º Ano", "3º Ano", "4º Ano", "5º Ano", "6º Ano", "7º Ano", "8º Ano", "9º Ano", "Colegial 1", "Colegial 2", "Colegial 3" }));
        jCSerie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jCSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCSerieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jCSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jFData, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jCAula, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jCDiscip, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)))
                .addContainerGap(408, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jTProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCAula, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCDiscip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jFData, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jBGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(349, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     Conexao c = new Conexao();
     
    private void jBGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGerarActionPerformed
        // TODO add your handling code here:
       if(jCAula.getSelectedItem().toString().equals("Selecione...")||
          jCSerie.getSelectedItem().toString().equals("Selecione...")||
          jCDiscip.getSelectedItem().toString().equals("Selecione...")||
          jTProfessor.getText().equals("")||jTProfessor.getText().equals("Nenhum professor selecionado")){
           
           JOptionPane.showMessageDialog(this, "Há um campo inválido. Verifique e tente novamente!!!");
           
       }else{

        ListadeChamada x = new ListadeChamada();
        
        //Converte a data pro formato que o banco lê
        String data = jFData.getText();
        String dataFormatada = "    -  -  ";
        if(data.equals("  /  /    ")){
            JOptionPane.showMessageDialog(this, "A data está incorreta");
        }else{
            String dataDividida[] = data.split("/");
            if(Integer.parseInt(dataDividida[0])>31 || Integer.parseInt(dataDividida[0])<1){
                JOptionPane.showMessageDialog(this, "A data está incorreta");
            }else{
                if(Integer.parseInt(dataDividida[1])>12 || Integer.parseInt(dataDividida[1])<1){
                    JOptionPane.showMessageDialog(this, "A data está incorreta");
                }else{
                   dataFormatada = dataDividida[2]+"-"+dataDividida[1]+"-"+dataDividida[0];
                }
            }
        }
              
        //Armazena nas variaveis os valores inseridos pelo usuario correspondente com a lista de chamada desejada
        x.setSerie((String) jCSerie.getSelectedItem());
        x.setAula((String) jCAula.getSelectedItem());
        x.setRA(Integer.parseInt(jTProfessor.getText()));
        x.setDisciplina((String) jCDiscip.getSelectedItem());
        x.setDatachamada(dataFormatada);
    

        //Passa os dados inseridos para gerar uma lista de chamada na proxima tela (TelaListadeChamada)
        
        c.InfoLista(x.getRA(), x.getSerie(), x.getDisciplina(),x.getAula(), x.getDatachamada());

        String verificaLista = "select count(*) "
        + "from pcc_tb_listachamada b, pcc_tb_pessoas a "
        + "where Hor_INT_Codigo = (select Hor_INT_Codigo from pcc_tb_horario "
        + "where Pro_INT_Codigo = "+x.getRA()+" "
        + "and Disc_INT_Codigo = ( select Disc_INT_Codigo from pcc_tb_disciplina "
        + "where Disc_ST_Descricao = '"+x.getDisciplina()+"') and Hor_INT_Aula = "+x.getAula()+" "
        + "and Serie_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie "
        + "where Serie_ST_Descricao = '"+x.getSerie()+"')) and "
        + "Lista_DT_Data like '%"+x.getDatachamada()+"%' and a.Pess_INT_Codigo = b.Aluno_INT_Codigo;";
        

        try {
            c.conectar();

            if(!c.equals(null)){

                int cont = c.verifica_chamada(verificaLista);
                if(cont != 0){
                    
                    String buscaLista = "select a.Pess_INT_Codigo, a.Pess_ST_Nome, b.Lista_ST_SituacaoAluno, b.Lista_INT_Codigo "
                    + "from pcc_tb_listachamada b, pcc_tb_pessoas a "
                    + "where Hor_INT_Codigo = (select Hor_INT_Codigo from pcc_tb_horario "
                    + "where Pro_INT_Codigo = "+x.getRA()+" "
                    + "and Disc_INT_Codigo = ( select Disc_INT_Codigo from pcc_tb_disciplina "
                    + "where Disc_ST_Descricao = '"+x.getDisciplina()+"') and Hor_INT_Aula = "+x.getAula()+" "
                    + "and Serie_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie "
                    + "where Serie_ST_Descricao = '"+x.getSerie()+"')) and "
                    + "Lista_DT_Data like '%"+x.getDatachamada()+"%' and a.Pess_INT_Codigo = b.Aluno_INT_Codigo;";
                    
                    this.dispose();
                    c.setFunc(func);
                    c.InfoLista(x.getRA(), x.getSerie(), x.getDisciplina(),x.getAula(), x.getDatachamada());
                    c.pesquisa_chamada(buscaLista);
                               
                }else{
                    String existeHorario = "select count(*) from pcc_tb_horario where Hor_INT_Aula = "+x.getAula()+" and "
                            + "Pro_INT_Codigo = "+x.getRA()+" and "
                            + "Serie_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie where Serie_ST_Descricao = '"+x.getSerie()+"') and "
                            + "Disc_INT_Codigo = (select Disc_INT_Codigo from pcc_tb_disciplina where Disc_ST_Descricao = '"+x.getDisciplina()+"') and "
                            + "Hor_ST_DiaDaSemana = (select func_nomeDia('"+x.getDatachamada()+"'));";
                    
                    int existe = c.verifica_chamada(existeHorario);
                    
                    if(existe != 0){
                        
                        String alunos = "select a.Aluno_INT_Codigo, b.Pess_ST_Nome from pcc_tb_aluno_serie a, pcc_tb_pessoas b "
                                + "where Ano_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie where Serie_ST_Descricao = '"+x.getSerie()+"') "
                                + "and a.Aluno_INT_Codigo = b.Pess_INT_Codigo;";
                        
                        this.dispose();
                        c.setFunc(func);
                        c.InfoLista(x.getRA(), x.getSerie(), x.getDisciplina(),x.getAula(), x.getDatachamada());
                        c.nova_chamada(alunos);                        
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "O horário informado está incorreto. Verifique os campos e tente novamente");
                    }
                }               

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaGerarLista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaGerarLista.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
    }//GEN-LAST:event_jBGerarActionPerformed

    private void jCSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCSerieActionPerformed
        if(!jCAula.getSelectedItem().toString().equals("Selecione...") && !jCDiscip.getSelectedItem().toString().equals("Selecione...")){
          buscaProfessor();            
        }
    }//GEN-LAST:event_jCSerieActionPerformed

    private void jCAulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCAulaActionPerformed
        if(!jCSerie.getSelectedItem().toString().equals("Selecione...") && !jCDiscip.getSelectedItem().toString().equals("Selecione...")){
          
            buscaProfessor();
            
        }
    }//GEN-LAST:event_jCAulaActionPerformed

    private void buscaProfessor(){
        Pessoa p = new Pessoa();
        String buscaProf = "select Pro_INT_Codigo from pcc_tb_horario where "
                    + "Serie_INT_Codigo = (select serie_int_codigo from pcc_tb_serie where serie_st_descricao = '"+jCSerie.getSelectedItem()+"') "
                    + "and Hor_INT_Aula = "+jCAula.getSelectedItem()+" and "
                    + "Disc_INT_Codigo = (select Disc_INT_Codigo from pcc_tb_disciplina where disc_st_descricao = '"+jCDiscip.getSelectedItem()+"');";
            
        try {
            c.conectar();
            p=c.pesquisa_professor(buscaProf);
            
            if(p.getRA() != 0){
                jTProfessor.setText(String.valueOf(p.getRA()));
            }else{
                jTProfessor.setText("Nenhum professor selecionado");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaGerarListaInternal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaGerarListaInternal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jCDiscipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCDiscipActionPerformed
        if(!jCAula.getSelectedItem().toString().equals("Selecione...") && !jCSerie.getSelectedItem().toString().equals("Selecione...")){
          buscaProfessor();
            
        }
    }//GEN-LAST:event_jCDiscipActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGerar;
    private javax.swing.JComboBox<String> jCAula;
    private javax.swing.JComboBox<String> jCDiscip;
    private javax.swing.JComboBox<String> jCSerie;
    private javax.swing.JFormattedTextField jFData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTProfessor;
    // End of variables declaration//GEN-END:variables

    public int getFunc() {
        return func;
    }

    public void setFunc(int func) {
        this.func = func;
    }
}
