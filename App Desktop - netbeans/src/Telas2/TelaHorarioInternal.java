/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas2;

import TelasAntigas.TelaHorario;
import Codigos.Conexao;
import Codigos.Horario;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Renan
 */
public class TelaHorarioInternal extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaHorarioInternal
     */
    private int func;
    private String log;
    private String registroLog;
    public TelaHorarioInternal() {
        initComponents();
        jTBuscaH.setRowHeight(37);
        jTBuscaH.setDefaultRenderer(Object.class, new CellRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jCSerie = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCAula = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jCDiscip = new javax.swing.JComboBox<>();
        jTProfessor = new javax.swing.JTextField();
        jBCadHor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCDia = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jBBusCod = new javax.swing.JButton();
        jBLimpHor = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jCBuscaSe = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTBuscaH = new javax.swing.JTable();
        jBBuscaH = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jCBuscaDia = new javax.swing.JComboBox<>();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1367, 552));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1330, 540));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jCSerie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "1º Ano", "2º Ano", "3º Ano", "4º Ano", "5º Ano", "6º Ano", "7º Ano", "8º Ano", "9º Ano", "Colegial 1", "Colegial 2", "Colegial 3" }));
        jCSerie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Professor:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Aula:");

        jCAula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "1 ", "2 ", "3 ", "4 ", "5", "6" }));
        jCAula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Disciplina:");

        jCDiscip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Matemática", "Português", "Biologia", "Química", "História", "Ciências", "Sociologia", "Filosofia", "Artes", "Educação Física" }));
        jCDiscip.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTProfessor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTProfessor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTProfessor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTProfessorKeyTyped(evt);
            }
        });

        jBCadHor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBCadHor.setText("Cadastrar Horário");
        jBCadHor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102)));
        jBCadHor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCadHorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Dia da Semana:");

        jCDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Segunda", "Terça", "Quarta", "Quinta", "Sexta" }));
        jCDia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Série:");

        jBBusCod.setText("...");
        jBBusCod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBBusCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBusCodActionPerformed(evt);
            }
        });

        jBLimpHor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBLimpHor.setText("Limpar Horário");
        jBLimpHor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102)));
        jBLimpHor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpHorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBBusCod, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)
                                .addComponent(jCDia, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBCadHor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jCAula, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jCDiscip, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jBLimpHor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(442, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCDia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCAula, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCDiscip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBusCod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCadHor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimpHor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Série:");

        jCBuscaSe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "1º Ano", "2º Ano", "3º Ano", "4º Ano", "5º Ano", "6º Ano", "7º Ano", "8º Ano", "9º Ano", "Colegial 1", "Colegial 2", "Colegial 3" }));
        jCBuscaSe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTBuscaH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTBuscaH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Aula", "Disciplina", "Professor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTBuscaH);

        jBBuscaH.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBBuscaH.setText("Buscar");
        jBBuscaH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBBuscaH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscaHActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Dia da Semana:");

        jCBuscaDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Segunda", "Terça", "Quarta", "Quinta ", "Sexta" }));
        jCBuscaDia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jCBuscaSe, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCBuscaDia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(92, 92, 92))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jBBuscaH, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBuscaSe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBuscaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addComponent(jBBuscaH, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Busca", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class CellRenderer extends DefaultTableCellRenderer {
	public CellRenderer() {
		super();
	}
	public Component getTableCellRendererComponent(JTable table, Object value,
			boolean isSelected, boolean hasFocus, int row, int column) {
		this.setHorizontalAlignment(CENTER);
		return super.getTableCellRendererComponent(table, value, isSelected,
				hasFocus, row, column);
	}
}
    
    private void jBBuscaHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscaHActionPerformed
        // TODO add your handling code here:
        String Serie = (String) jCBuscaSe.getSelectedItem();
        String Dia = (String) jCBuscaDia.getSelectedItem();
        Conexao c = new Conexao();
        Horario h = new Horario();
        int linha=0;
        
        if(Serie.equals("Selecione...") || Dia.equals("Selecione...")){  //Verifica se os dois campos foram preechidos
            JOptionPane.showMessageDialog(this, " Campo(s) não preenchido(s) correntamente!\n Por favor, tente novamente!");
        }else{
        try {
            c.conectar();
            if(!c.equals(null)){
                for(linha=1; linha<=5;linha++){
                    
                    //Select que busca o horario das aulas de acordo com a Série e dia selecionados
                    String BuscarS = "select a.Hor_ST_DiaDaSemana, a.Hor_INT_Aula, b.Disc_ST_Descricao, "
                    + "c.pess_st_nome from pcc_tb_horario a, pcc_tb_disciplina b, pcc_tb_pessoas c, "
                    + "pcc_tb_serie d where a.Disc_INT_Codigo = b.Disc_INT_Codigo "
                    + "and c.pess_int_codigo = a.Pro_INT_Codigo "
                    + "and a.Serie_INT_Codigo = d.Serie_INT_Codigo "
                    + "and d.Serie_ST_Descricao = '"+Serie+"' and a.Hor_ST_DiaDaSemana = '"+Dia+"' "
                    +"and a.Hor_INT_Aula = '"+linha+"';";

                    h=c.pesquisa_horario(BuscarS); // Preeche a tabela com os dados encontrados
                    jTBuscaH.setValueAt(h.getCodAula(), linha-1, 0);
                    jTBuscaH.setValueAt(h.getDisciplina(), linha-1, 1);
                    jTBuscaH.setValueAt(h.getNome(), linha-1, 2);

                }

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaHorario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaHorario.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jBBuscaHActionPerformed

    private void jBBusCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBusCodActionPerformed
        // TODO add your handling code here:

        TelaBuscaCodigo t = new TelaBuscaCodigo();
        t.setTipo("Professor");
        t.getCod();
        t.setVisible(true);
    }//GEN-LAST:event_jBBusCodActionPerformed

    private void jBCadHorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCadHorActionPerformed
        // TODO add your handling code here:

        Horario a = new Horario();
        Conexao c = new Conexao();

        //Verifica se algum campo está vazio
        if(jCDia.getSelectedItem().toString().equals("Selecione...")||jCSerie.getSelectedItem().toString().equals("Selecione...")||jCAula.getSelectedItem().toString().equals("Selecione...")||jCDiscip.getSelectedItem().toString().equals("Selecione...")||jTProfessor.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Campo(s) não preenchido(s) corretamente");
        }else{
            //Insere os campos lidos da tela nas variaveis
            a.setDiadaSemana((String) jCDia.getSelectedItem());
            a.setSerie((String) jCSerie.getSelectedItem());
            a.setDisciplina((String) jCDiscip.getSelectedItem());
            a.setAulaH((String) jCAula.getSelectedItem());
            a.setRA(Integer.parseInt(jTProfessor.getText()));

            //Verifica se o professor já está cadastrado em outra sala na mesma aula
            String verifica = "select count(*) from pcc_tb_horario where Hor_ST_DiaDaSemana = '"+a.getDiadaSemana()+"'"
                    + "and Hor_INT_Aula = "+a.getAulaH()+" and Pro_INT_Codigo = "+a.getRA()+";";
            try {
                c.conectar();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TelaHorarioInternal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(TelaHorarioInternal.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(c.verifica(verifica) == 0){
                //Verifica se o horario já existe ou é novo
                int tipoHor;
                String verHor = "select count(*) from pcc_tb_horario "
                + "where Hor_ST_DiaDaSemana = '"+a.getDiadaSemana()+"' and Hor_INT_Aula = '"+a.getAulaH()+"' "
                + "and Serie_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie where Serie_ST_Descricao = '"+a.getSerie()+"');";
                try {
                    c.conectar();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(TelaHorarioInternal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaHorarioInternal.class.getName()).log(Level.SEVERE, null, ex);
                }
                tipoHor = c.verifica(verHor);

                switch(tipoHor){
                    case 1:
                        int confirma = JOptionPane.showConfirmDialog(null, "Esse horário já está cadastrado.\nAo continuar com essa operação você irá deletar TODOS os registros de chamada."
                        + "\nDeseja continuar?\nObs:Operação indicada apenas para início do ano letivo", "ATENÇÃO!!! ", JOptionPane.YES_NO_OPTION);
                        if (confirma==0){
                            String deleta = "call proc_DelChamada();";
                            String novasListas = "call proc_NovasListas();";
                            String AttHor = "call proc_AttHorario('"+a.getDiadaSemana()+"', '"+a.getSerie()+"', "
                            + "'"+a.getAulaH()+"', '"+a.getDisciplina()+"', '"+a.getRA()+"');";

                            try {
                                c.conectar();
                                if(c.runSql(deleta)){
                                    if(c.runSql(AttHor)){
                                        JOptionPane.showMessageDialog(null, "Horário Atualizado");
                                        c.runSql(novasListas);
                                        log = "Exclusão de TODOS os registros de chamada;";
                                        registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                                        c.runSql(registroLog);
                                    }
                                }
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(TelaHorario.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (SQLException ex) {
                                Logger.getLogger(TelaHorario.class.getName()).log(Level.SEVERE, null, ex);
                            } 
                        }
                    break;

                    case 0:
                        String cadastroH = "call proc_CadHorario('"+a.getDiadaSemana()+"', '"+a.getSerie()+"', "
                        + "'"+a.getAulaH()+"', '"+a.getDisciplina()+"', '"+a.getRA()+"');";

                        try {
                            c.conectar();
                            if(c.runSql(cadastroH)){
                                JOptionPane.showMessageDialog(null, "Horário Cadastrado");
                                log = "Novo horário cadastrado. Dia:"+a.getDiadaSemana()+" - Aula:"+a.getAulaH()+";";
                                registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                                c.runSql(registroLog);
                            }
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(TelaHorario.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(TelaHorario.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    break;
                }   
            }
            else{
                JOptionPane.showMessageDialog(this, "Esse professor já está cadastrado em outra sala nessa aula");
            }
        }
        
    }//GEN-LAST:event_jBCadHorActionPerformed

    private void jTProfessorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProfessorKeyTyped
        char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTProfessorKeyTyped

    private void jBLimpHorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpHorActionPerformed
        
        Conexao c = new Conexao();
        Horario a = new Horario();
        
        a.setDiadaSemana((String) jCDia.getSelectedItem());
        a.setSerie((String) jCSerie.getSelectedItem());
        
        if(jCDia.getSelectedItem().toString().equals("Selecione...")||jCSerie.getSelectedItem().toString().equals("Selecione...")){
            JOptionPane.showMessageDialog(this, "Para continuar com essa opção selecione um dia da semana e uma série");
        }else{
            int p = JOptionPane.showConfirmDialog(null, "Ao prosseguir serão apagados TODOS os horários da "+a.getDiadaSemana()+" do "+a.getSerie()+", bem como TODOS os registros de chamada."
                + "\nDeseja realmente continuar???"
                + "\nObs: Operação indicada apenas para início de ano letivo", "ATENÇÃO!!!", JOptionPane.YES_NO_OPTION);
        
        if(p == 0){
            String deleta = "call proc_DelChamada();";
            String novasListas = "call proc_NovasListas();";
            String apagaHorario = "delete from pcc_tb_horario where Hor_ST_DiaDaSemana = '"+a.getDiadaSemana()+"' "
                    + "and Serie_INT_Codigo = (select Serie_INT_Codigo from pcc_tb_serie where Serie_ST_Descricao = '"+a.getSerie()+"');";
            
            try {
                c.conectar();
                c.runSql(deleta);
                if(c.runSql(apagaHorario)){
                   JOptionPane.showMessageDialog(this, "Horário apagado com sucesso");
                   log = "Horário apagado junto com TODOS os registros de chamada. Dia:"+a.getDiadaSemana()+" - Série:"+a.getSerie()+";";
                   registroLog = "insert into pcc_tb_log values(null,"+func+",'"+log+"', default);";
                   c.runSql(registroLog);
                   c.runSql(novasListas);
                }else{
                   JOptionPane.showMessageDialog(this, "Não foi possível apagar horário"); 
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TelaHorarioInternal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(TelaHorarioInternal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        }
                
    }//GEN-LAST:event_jBLimpHorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBusCod;
    private javax.swing.JButton jBBuscaH;
    private javax.swing.JButton jBCadHor;
    private javax.swing.JButton jBLimpHor;
    private javax.swing.JComboBox<String> jCAula;
    private javax.swing.JComboBox<String> jCBuscaDia;
    private javax.swing.JComboBox<String> jCBuscaSe;
    private javax.swing.JComboBox<String> jCDia;
    private javax.swing.JComboBox<String> jCDiscip;
    private javax.swing.JComboBox<String> jCSerie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTBuscaH;
    private javax.swing.JTextField jTProfessor;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    public int getFunc() {
        return func;
    }

    public void setFunc(int func) {
        this.func = func;
    }
}
